/*     */ package net.poodleschool.poodleclient.poodleclient.modules;
/*     */ 
/*     */ import net.poodleschool.poodleclient.poodleclient.Addon;
/*     */ import java.util.List;
/*     */ import meteordevelopment.meteorclient.events.world.TickEvent;
/*     */ import meteordevelopment.meteorclient.settings.EnumSetting;
/*     */ import meteordevelopment.meteorclient.settings.IntSetting;
/*     */ import meteordevelopment.meteorclient.settings.Setting;
/*     */ import meteordevelopment.meteorclient.settings.SettingGroup;
/*     */ import meteordevelopment.meteorclient.systems.modules.Module;
/*     */ import meteordevelopment.meteorclient.utils.player.InvUtils;
/*     */ import meteordevelopment.orbit.EventHandler;
/*     */ import net.minecraft.class_1293;
/*     */ import net.minecraft.class_1294;
/*     */ import net.minecraft.class_1799;
/*     */ import net.minecraft.class_1802;
/*     */ import net.minecraft.class_1844;
/*     */ import net.minecraft.class_1935;
/*     */ import net.minecraft.class_2561;
/*     */ import net.minecraft.class_2583;
/*     */ 
/*     */ public class ItemExploits
/*     */   extends Module
/*     */ {
/*  25 */   public int delay = 0;
/*     */   
/*     */   public enum Mode {
/*  28 */     LongName,
/*  29 */     Drop,
/*  30 */     KillPotion;
/*     */   }
/*     */   
/*  33 */   private final SettingGroup sgGeneral = this.settings.getDefaultGroup();
/*     */   
/*  35 */   private final Setting<Mode> mode = this.sgGeneral.add((Setting)((EnumSetting.Builder)((EnumSetting.Builder)((EnumSetting.Builder)((EnumSetting.Builder)(new EnumSetting.Builder())
/*  36 */       .name("mode"))
/*  37 */       .description("The Exploit to use"))
/*  38 */       .defaultValue(Mode.LongName))
/*  39 */       .onChanged(newVar -> {
/*     */           if (isActive())
/*     */             toggle(); 
/*  42 */         })).build());
/*     */ 
/*     */   
/*  45 */   public final Setting<Integer> longName = this.sgGeneral.add((Setting)((IntSetting.Builder)((IntSetting.Builder)((IntSetting.Builder)((IntSetting.Builder)(new IntSetting.Builder())
/*  46 */       .name("name-length"))
/*  47 */       .description("The Length of the Items Name"))
/*  48 */       .defaultValue(Integer.valueOf(1500)))
/*  49 */       .min(1000)
/*  50 */       .sliderMax(3000)
/*  51 */       .max(5000)
/*  52 */       .visible(() -> (this.mode.get() == Mode.LongName)))
/*  53 */       .build());
/*     */ 
/*     */   
/*     */   public ItemExploits() {
/*  57 */     super(Addon.CATEGORY, "item-exploits", "Create annoying items.");
/*     */   }
/*     */ 
/*     */   
/*     */   public void onActivate() {
/*  62 */     if (this.mc.field_1724 == null)
/*     */       return; 
/*  64 */     this.delay = 0;
/*  65 */     if (this.mode.get() == Mode.LongName) {
/*  66 */       if (!(this.mc.field_1724.method_31549()).field_7477) {
/*  67 */         error("You have to be in Creative Mode!", new Object[0]);
/*  68 */         toggle();
/*     */         
/*     */         return;
/*     */       } 
/*  72 */       StringBuilder text = new StringBuilder("§0§k");
/*     */       
/*  74 */       for (int i = 0; i < ((Integer)this.longName.get()).intValue(); ) { text.append(i); i++; }
/*     */       
/*  76 */       class_1799 item = (new class_1799((class_1935)class_1802.field_8106)).method_7977((class_2561)class_2561.method_43470(text.toString()));
/*  77 */       if (!this.mc.field_1724.method_31548().method_7394(item)) {
/*  78 */         error("There is no free Space in your Inventory", new Object[0]);
/*     */       }
/*     */       
/*  81 */       toggle();
/*  82 */     } else if (this.mode.get() == Mode.KillPotion) {
/*  83 */       if (!(this.mc.field_1724.method_31549()).field_7477) {
/*  84 */         error("You have to be in Creative Mode!", new Object[0]);
/*  85 */         toggle();
/*     */         
/*     */         return;
/*     */       } 
/*  89 */       class_1799 item = (new class_1799((class_1935)class_1802.field_8436)).method_7977((class_2561)class_2561.method_43470("Creative Kill Potion | ɴᴀᴠɪɴᴇ")
/*  90 */           .method_10862(class_2583.field_24360.method_10978(Boolean.valueOf(false)).method_36139(Addon.instance.color.getPacked())));
/*  91 */       class_1844.method_8056(item, List.of(new class_1293(class_1294.field_5915, 1, 125)));
/*     */ 
/*     */       
/*  94 */       if (!this.mc.field_1724.method_31548().method_7394(item)) {
/*  95 */         error("There is no free Space in your Inventory", new Object[0]);
/*     */       }
/*  97 */       toggle();
/*     */     } 
/*     */   }
/*     */   
/*     */   @EventHandler
/*     */   public void onTick(TickEvent.Post e) {
/* 103 */     if (this.mc.field_1724 == null) {
/*     */       return;
/*     */     }
/* 106 */     if (this.mode.get() == Mode.Drop) {
/* 107 */       if (this.delay == 20 || this.delay == 10) {
/* 108 */         if (this.delay == 10) {
/* 109 */           for (int i = 0; i < this.mc.field_1724.method_31548().method_5439(); i++) {
/* 110 */             InvUtils.drop().slot(i);
/*     */           }
/*     */         }
/* 113 */         if (this.delay == 20) {
/* 114 */           this.delay = 0;
/* 115 */           if (!(this.mc.field_1724.method_31549()).field_7477) {
/* 116 */             error("You have to be in Creative Mode!", new Object[0]);
/* 117 */             toggle();
/*     */             
/*     */             return;
/*     */           } 
/* 121 */           class_1799 item = new class_1799((class_1935)class_1802.field_8106);
/* 122 */           item.method_7939(999999);
/* 123 */           this.mc.field_1724.method_31548().method_7394(item);
/*     */         } 
/*     */       } 
/* 126 */       this.delay++;
/*     */     } 
/*     */   }
/*     */ }


/* Location:              /Users/iangoss/Downloads/navine-3.2.8.jar!/de/Jakob/navine/modules/ItemExploits.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */